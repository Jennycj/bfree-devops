name: Docker Image CI
on:
  push:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: setup mongo uri
      run:  |
        echo "DATABASE_URL_ATLAS=${{ secrets.DATABASE_URL_ATLAS }}" >> .env
    - name: Build, tag and push image to Amazon ECR
      run: |
        docker-compose up -d --build
        docker tag user_api:tag ${{ secrets.ECR_REPOSITORY }}
        docker tag mongo ${{ secrets.ECR_REPOSITORY }}
        docker push ${{ secrets.ECR_REPOSITORY }}
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def1
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: mongo
        image: ${{ secrets.MONGO_IMAGE }}
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def2
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: app
        image: ${{ secrets.APP_IMAGE }}
    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: task-definition.json
        service: bfreeService
        cluster: bfreeCluster
        wait-for-service-stability: true


        
